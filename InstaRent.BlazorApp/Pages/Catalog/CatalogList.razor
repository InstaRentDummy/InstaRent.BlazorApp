@page "/catalog"
@using InstaRent.BlazorApp.Shared.Bags
@using InstaRent.BlazorApp.Services.Catalog
@using InstaRent.BlazorApp.Components
@using InstaRent.BlazorApp.Shared.Dto
@inject ICatalogService catalogService
@inject NavigationManager NavigationManager
@*<h3>Catalog List</h3>*@


<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        
        <div class="dropdown  nav-item">

            <button class="btn btn-secondary dropdown-toggle me-2" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                @ActivePage
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                @foreach (string tabPage in Pages)
                {
                    <li>
                        <a role="button" class="dropdown-item"
                       @onclick=@( () => ActivatePage(tabPage) )>
                            @tabPage
                        </a>
                    </li>

                }
            </ul>
        </div>
        <form class="d-flex w-100">
            <input class="form-control me-2 " type="search" placeholder="Search" aria-label="Search" @bind-value="_searchValue" @bind-value:event="oninput" @onkeydown="@(e => OnSearchTextChanged(e))">
        </form>
    </div>
</nav>






<div class="container mt-3">

    @if (catalogService.Bags != null)
    {
        <div class="row gy-4">

            @foreach (var bag in catalogService.Bags.Items)
            {
                <div class="col-sm">
                    <div class="card h-100" style="min-width: 18rem; max-width: 18rem;">
                        <img src="@bag.image_urls[0]" class="img-fluid" alt="...">
                        <div class="card-body">
                            <a role="button" @onclick=@( () => ViewDetail(@bag.Id.ToString()) ) class="stretched-link">
                                <h5 class="card-title">@bag.bag_name</h5>
                            </a>
                            <p class="card-text"> @bag.description</p>
                            <h5 class="badge bg-primary rounded-pill">
                                $@bag.price
                            </h5>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div>
            <div>
                <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" />
            </div>
        </div>
    }
    else
    {
        <p>Loading....</p>
    }
</div>

@code {
    string _filterText;
    public MetaData MetaData { get; set; } = new MetaData();
    private PageParameters _pageParameters = new PageParameters() { PageSize = 10 };
    public string ActivePage { get; set; }
    List<string> Pages = new List<string>() { "Trending", "Popular", "Recommend for you" };



    void ActivatePage(string page)
    {
        ActivePage = page;
        LoadList();
    }

    protected override async Task OnInitializedAsync()
    {
        ActivatePage("Trending");
        await LoadList();
    }

    private async Task ViewDetail(string bagid)
    {
        await catalogService.IncreaseViewCount(bagid);
        NavigationManager.NavigateTo($"/Bag/{bagid}");
    }
    private async Task SelectedPage(int page)
    {
        _pageParameters.PageNumber = page;
        await LoadList();
    }

    public string _searchValue { get; set; }
    async void OnSearchTextChanged(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            _filterText = _searchValue.ToString();
            await LoadList();
        }
    }

    async Task LoadList()
    {

        await catalogService.LoadCatalogs(categoryType: ActivePage, filterText: _filterText);
        StateHasChanged();
    }

}

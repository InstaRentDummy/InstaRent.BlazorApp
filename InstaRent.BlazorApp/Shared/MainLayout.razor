@using InstaRent.BlazorApp.Shared.Users
@using Blazored.LocalStorage
@using InstaRent.BlazorApp.Services.Users
@using InstaRent.BlazorApp.Services.Catalog
@inject IUserService _userService
@inject ICatalogService _catlogService
@inject ILocalStorageService localStorage
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inherits LayoutComponentBase

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>

        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <div class="container-fluid justify-content-end">

                <AuthorizeView>
                    <NotAuthorized>

                        <div class="d-flex">
                            
                            <a class="btn btn-outline-dark me-5" href="login"><i class="bi bi-person me-1"></i>Login</a>
                        </div>
                    </NotAuthorized>
                    <Authorized>
                        @{
                            if (localUser.Role == "Lessee")
                            {
                                <a href="cart" class="btn btn-primary position-relative me-3 mt-1 dropbtn">
                                    <i class="bi bi-cart-plus-fill"></i>
                                    <small>Cart</small>
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                        @cartItemsCount.ToString()
                                        <span class="visually-hidden">unread messages</span>
                                    </span>
                                </a>
                            }
                        }
                        <div class="dropdown  nav-item">
                            <button class="btn btn-light dropdown-toggle me-2" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                                Welcome back, @localUser.Name!
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">

                                <li>
                                    <a role="button" class="dropdown-item"
                                       @onclick="UserProfile">
                                        Profile
                                    </a>
                                </li>
                                <li>
                                    <a role="button" class="dropdown-item"
                                       @onclick="Logout">
                                        Logout
                                    </a>
                                </li>
                            </ul>
                        </div>

                    </Authorized>
                </AuthorizeView>
            </div>

        </nav>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    UserInfoDto localUser = new();
    int? cartItemsCount;
    protected override async Task OnInitializedAsync()
    {
        localUser = await localStorage.GetItemAsync<UserInfoDto>("user");
        if (localUser != null)
        {
            cartItemsCount = await _catlogService.GetCartItemCountbyUserIdAsync(localUser.Email);
        }
        _userService.OnChange += MenuChanged;
        _catlogService.OnAdd += CartChanged;
    }

    void Dispose()
    {
        _userService.OnChange -= MenuChanged;
    }

    private async void MenuChanged()
    {
        localUser = await localStorage.GetItemAsync<UserInfoDto>("user");
        await InvokeAsync(StateHasChanged);
    }
    private async void CartChanged()
    {
        if (localUser != null)
        {
            cartItemsCount = await _catlogService.GetCartItemCountbyUserIdAsync(localUser.Email);
            await InvokeAsync(StateHasChanged);
        }

    }
    private async void Logout()
    {
        await localStorage.RemoveItemAsync("user");
        await AuthStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo($"");
    }

    private void UserProfile()
    {
        NavigationManager.NavigateTo($"/User/Edit/{localUser.Id}");
    }
}
